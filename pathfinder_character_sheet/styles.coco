import justpy as jp

background_color = "#f9f9f9"
button_color = "blue-500"
hover_color = "blue-600"
header_color = "#A0522D"
text_color = "text-white"

table_classes = "min-w-full bg-white border rounded shadow"
table_style = "transform: scale(1.0)"
header_row_classes = "bg-gray-300"
header_cell_classes = "py-2 px-3 text-center"
cell_classes = "border text-center items-center justify-center"
cell_style = ""

ac_classes = "flex w-full p-4 m-4"

flex_row_classes = "flex w-full gap-4"
flex_row_style = f"background-color: {background_color};"
one_third_col_classes = "flex flex-col w-1/3 gap-4"

reset_button_classes = f"bg-{button_color} hover:bg-{hover_color} {text_color} font-bold py-2 px-4 rounded"
reset_button_style = ""

checkbox_div_classes = "flex w-full p-4 m-4"
checkbox_div_style = "background-color: transparent;"
checkbox_classes = "bg-blue-500 m-2 p-2"
checkbox_style = "transform: scale(1.0);"

hit_points_classes = "border border-gray-300 shadow-lg p-4 rounded-md m-4 focus:outline-none focus:bg-white focus:border-purple-500"
hit_points_style = ""

collapse_button_classes = f'bg-{button_color} hover:bg-{hover_color} {text_color} font-bold py-2 px-4 flex justify-between items-center'
collapse_button_style = ""

roll_cell_style = ""
roll_cell_classes = f"bg-{button_color} hover:bg-{hover_color} {text_color} font-bold py-2 px-4 text-center"

caret_style = ""
caret_classes = "fas fa-angle-down right-2"

def make_col_flex_div(overflow=False):
    classes = "flex-col w-full"
    if overflow:
        classes += " overflow-auto overflow-x-auto"
    return jp.Div(classes=classes, style=f"background-color: {background_color}")


def make_title_box(height: str, width: str, title: str, click=None, text="", overflow=False):
    box_style = f"background-color: #f9f9f9; border: 1px solid #ccc; shadow-lg; padding: 20px; w-{width}; height: {height}; rounded;"
    if overflow:
        box_style += " overflow-y: auto;"
    if click:
        box = jp.Div(
            classes=f"bg-{button_color} hover:bg-{hover_color} {text_color} shadow-lg p-4 m-4 rounded-md flex items-center justify-center",
            style=f"border:tpx: solid #ccc; shadow-lg; padding: 20px; w-{width}; height: {height}",
            inner_html="<b>" + text,
            click=click
        )
    else:
        box = jp.Div(
            classes="border border-gray-300 shadow-lg p-4 rounded-md m-4 flex text-center items-center justify-center", style=box_style, text=text)
    title = jp.H2(classes="font-bold mb-2 text-center justify-center", text=title)
    box.add(title)
    return box
